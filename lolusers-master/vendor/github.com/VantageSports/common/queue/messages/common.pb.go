// Code generated by protoc-gen-go.
// source: common.proto
// DO NOT EDIT!

package messages

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Email struct {
	Emails   []string `protobuf:"bytes,1,rep,name=emails" json:"emails,omitempty"`
	FromAddr string   `protobuf:"bytes,2,opt,name=from_addr,json=fromAddr" json:"from_addr,omitempty"`
	FromName string   `protobuf:"bytes,3,opt,name=from_name,json=fromName" json:"from_name,omitempty"`
	Subject  string   `protobuf:"bytes,4,opt,name=subject" json:"subject,omitempty"`
	Body     string   `protobuf:"bytes,5,opt,name=body" json:"body,omitempty"`
	HtmlBody string   `protobuf:"bytes,6,opt,name=html_body,json=htmlBody" json:"html_body,omitempty"`
}

func (m *Email) Reset()                    { *m = Email{} }
func (m *Email) String() string            { return proto.CompactTextString(m) }
func (*Email) ProtoMessage()               {}
func (*Email) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

type FilesExistCondition struct {
	Files          []string `protobuf:"bytes,1,rep,name=files" json:"files,omitempty"`
	MinutesBetween int64    `protobuf:"varint,2,opt,name=minutes_between,json=minutesBetween" json:"minutes_between,omitempty"`
	Topic          string   `protobuf:"bytes,3,opt,name=topic" json:"topic,omitempty"`
	MessageJson    string   `protobuf:"bytes,4,opt,name=message_json,json=messageJson" json:"message_json,omitempty"`
}

func (m *FilesExistCondition) Reset()                    { *m = FilesExistCondition{} }
func (m *FilesExistCondition) String() string            { return proto.CompactTextString(m) }
func (*FilesExistCondition) ProtoMessage()               {}
func (*FilesExistCondition) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

type TranscodeVideo struct {
	Source      string `protobuf:"bytes,1,opt,name=source" json:"source,omitempty"`
	Destination string `protobuf:"bytes,2,opt,name=destination" json:"destination,omitempty"`
	BitRate     string `protobuf:"bytes,3,opt,name=bit_rate,json=bitRate" json:"bit_rate,omitempty"`
	DestWidth   string `protobuf:"bytes,4,opt,name=dest_width,json=destWidth" json:"dest_width,omitempty"`
	DestHeight  string `protobuf:"bytes,5,opt,name=dest_height,json=destHeight" json:"dest_height,omitempty"`
	MakePublic  bool   `protobuf:"varint,6,opt,name=make_public,json=makePublic" json:"make_public,omitempty"`
}

func (m *TranscodeVideo) Reset()                    { *m = TranscodeVideo{} }
func (m *TranscodeVideo) String() string            { return proto.CompactTextString(m) }
func (*TranscodeVideo) ProtoMessage()               {}
func (*TranscodeVideo) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func init() {
	proto.RegisterType((*Email)(nil), "messages.Email")
	proto.RegisterType((*FilesExistCondition)(nil), "messages.FilesExistCondition")
	proto.RegisterType((*TranscodeVideo)(nil), "messages.TranscodeVideo")
}

func init() { proto.RegisterFile("common.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 356 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x4c, 0x92, 0xdf, 0x4a, 0xc3, 0x30,
	0x14, 0xc6, 0xa9, 0xfb, 0xd7, 0x9e, 0x8d, 0x09, 0x51, 0xa4, 0x22, 0xe2, 0xdc, 0x8d, 0xbb, 0xf2,
	0xc6, 0x27, 0x70, 0x32, 0x11, 0x2f, 0x44, 0x8a, 0xe8, 0x65, 0x48, 0x9b, 0xb3, 0x35, 0xb3, 0x49,
	0x46, 0x93, 0x32, 0xf7, 0x10, 0xbe, 0x85, 0xcf, 0xe2, 0x73, 0x49, 0xd2, 0x4c, 0xbd, 0xcb, 0xf7,
	0xfb, 0xce, 0x39, 0x7c, 0x7c, 0x04, 0x46, 0x85, 0x96, 0x52, 0xab, 0xeb, 0x4d, 0xad, 0xad, 0x26,
	0xb1, 0x44, 0x63, 0xd8, 0x0a, 0xcd, 0xf4, 0x2b, 0x82, 0xde, 0x42, 0x32, 0x51, 0x91, 0x13, 0xe8,
	0xa3, 0x7b, 0x98, 0x34, 0x9a, 0x74, 0x66, 0x49, 0x16, 0x14, 0x39, 0x83, 0x64, 0x59, 0x6b, 0x49,
	0x19, 0xe7, 0x75, 0x7a, 0x30, 0x89, 0x66, 0x49, 0x16, 0x3b, 0x70, 0xcb, 0x79, 0xfd, 0x6b, 0x2a,
	0x26, 0x31, 0xed, 0xfc, 0x99, 0x4f, 0x4c, 0x22, 0x49, 0x61, 0x60, 0x9a, 0x7c, 0x8d, 0x85, 0x4d,
	0xbb, 0xde, 0xda, 0x4b, 0x42, 0xa0, 0x9b, 0x6b, 0xbe, 0x4b, 0x7b, 0x1e, 0xfb, 0xb7, 0x3b, 0x55,
	0x5a, 0x59, 0x51, 0x6f, 0xf4, 0xdb, 0x53, 0x0e, 0xcc, 0x35, 0xdf, 0x4d, 0x3f, 0x23, 0x38, 0xba,
	0x17, 0x15, 0x9a, 0xc5, 0x87, 0x30, 0xf6, 0x4e, 0x2b, 0x2e, 0xac, 0xd0, 0x8a, 0x1c, 0x43, 0x6f,
	0xe9, 0x70, 0xc8, 0xdc, 0x0a, 0x72, 0x05, 0x87, 0x52, 0xa8, 0xc6, 0xa2, 0xa1, 0x39, 0xda, 0x2d,
	0xa2, 0xf2, 0xc1, 0x3b, 0xd9, 0x38, 0xe0, 0x79, 0x4b, 0xdd, 0xba, 0xd5, 0x1b, 0x51, 0x84, 0xe8,
	0xad, 0x20, 0x97, 0x30, 0x0a, 0xfd, 0xd0, 0xb5, 0xd1, 0x2a, 0x84, 0x1f, 0x06, 0xf6, 0x68, 0xb4,
	0x9a, 0x7e, 0x47, 0x30, 0x7e, 0xa9, 0x99, 0x32, 0x85, 0xe6, 0xf8, 0x2a, 0x38, 0x6a, 0xd7, 0x9f,
	0xd1, 0x4d, 0x5d, 0x60, 0x1a, 0xf9, 0xf9, 0xa0, 0xc8, 0x04, 0x86, 0x1c, 0x8d, 0x15, 0x8a, 0xb9,
	0xc4, 0xa1, 0xc1, 0xff, 0x88, 0x9c, 0x42, 0x9c, 0x0b, 0x4b, 0x6b, 0x66, 0xf7, 0x1d, 0x0e, 0x72,
	0x61, 0x33, 0x66, 0x91, 0x9c, 0x03, 0xb8, 0x49, 0xba, 0x15, 0xdc, 0x96, 0x21, 0x48, 0xe2, 0xc8,
	0x9b, 0x03, 0xe4, 0xa2, 0xbd, 0x4d, 0x4b, 0x14, 0xab, 0xd2, 0x86, 0x3a, 0xfd, 0xc6, 0x83, 0x27,
	0x6e, 0x40, 0xb2, 0x77, 0xa4, 0x9b, 0x26, 0xaf, 0x44, 0xe1, 0x6b, 0x8d, 0x33, 0x70, 0xe8, 0xd9,
	0x93, 0xbc, 0xef, 0x3f, 0xc4, 0xcd, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd9, 0x1d, 0x50, 0x5a,
	0x20, 0x02, 0x00, 0x00,
}

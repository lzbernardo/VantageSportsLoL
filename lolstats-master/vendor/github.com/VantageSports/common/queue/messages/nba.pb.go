// Code generated by protoc-gen-go.
// source: nba.proto
// DO NOT EDIT!

package messages

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// GameFileMigration describes the transition of a game file from one format
// to another. Some other messages annotate it with additional fields
// (see MigrateChances) and some workflow stages use it directly (such as
// OCRJoinChances and AggregateChances)
type GameFileMigration struct {
	GameId      string `protobuf:"bytes,1,opt,name=game_id,json=gameId" json:"game_id,omitempty"`
	Source      string `protobuf:"bytes,2,opt,name=source" json:"source,omitempty"`
	Destination string `protobuf:"bytes,3,opt,name=destination" json:"destination,omitempty"`
}

func (m *GameFileMigration) Reset()                    { *m = GameFileMigration{} }
func (m *GameFileMigration) String() string            { return proto.CompactTextString(m) }
func (*GameFileMigration) ProtoMessage()               {}
func (*GameFileMigration) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *GameFileMigration) GetGameId() string {
	if m != nil {
		return m.GameId
	}
	return ""
}

func (m *GameFileMigration) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *GameFileMigration) GetDestination() string {
	if m != nil {
		return m.Destination
	}
	return ""
}

type MigrateChances struct {
	GameMigration *GameFileMigration `protobuf:"bytes,1,opt,name=game_migration,json=gameMigration" json:"game_migration,omitempty"`
	SourceSchema  string             `protobuf:"bytes,2,opt,name=source_schema,json=sourceSchema" json:"source_schema,omitempty"`
	DestSchema    string             `protobuf:"bytes,3,opt,name=dest_schema,json=destSchema" json:"dest_schema,omitempty"`
}

func (m *MigrateChances) Reset()                    { *m = MigrateChances{} }
func (m *MigrateChances) String() string            { return proto.CompactTextString(m) }
func (*MigrateChances) ProtoMessage()               {}
func (*MigrateChances) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *MigrateChances) GetGameMigration() *GameFileMigration {
	if m != nil {
		return m.GameMigration
	}
	return nil
}

func (m *MigrateChances) GetSourceSchema() string {
	if m != nil {
		return m.SourceSchema
	}
	return ""
}

func (m *MigrateChances) GetDestSchema() string {
	if m != nil {
		return m.DestSchema
	}
	return ""
}

type OCRTextExtraction struct {
	GameId                   string         `protobuf:"bytes,1,opt,name=game_id,json=gameId" json:"game_id,omitempty"`
	VideoPath                string         `protobuf:"bytes,2,opt,name=video_path,json=videoPath" json:"video_path,omitempty"`
	ExtractedFramesPerSecond int64          `protobuf:"varint,3,opt,name=extracted_frames_per_second,json=extractedFramesPerSecond" json:"extracted_frames_per_second,omitempty"`
	OutputImagesPath         string         `protobuf:"bytes,4,opt,name=output_images_path,json=outputImagesPath" json:"output_images_path,omitempty"`
	Dimensions               *OCRDimensions `protobuf:"bytes,5,opt,name=dimensions" json:"dimensions,omitempty"`
}

func (m *OCRTextExtraction) Reset()                    { *m = OCRTextExtraction{} }
func (m *OCRTextExtraction) String() string            { return proto.CompactTextString(m) }
func (*OCRTextExtraction) ProtoMessage()               {}
func (*OCRTextExtraction) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *OCRTextExtraction) GetGameId() string {
	if m != nil {
		return m.GameId
	}
	return ""
}

func (m *OCRTextExtraction) GetVideoPath() string {
	if m != nil {
		return m.VideoPath
	}
	return ""
}

func (m *OCRTextExtraction) GetExtractedFramesPerSecond() int64 {
	if m != nil {
		return m.ExtractedFramesPerSecond
	}
	return 0
}

func (m *OCRTextExtraction) GetOutputImagesPath() string {
	if m != nil {
		return m.OutputImagesPath
	}
	return ""
}

func (m *OCRTextExtraction) GetDimensions() *OCRDimensions {
	if m != nil {
		return m.Dimensions
	}
	return nil
}

type OCRDimensions struct {
	X             int64  `protobuf:"varint,1,opt,name=x" json:"x,omitempty"`
	Y             int64  `protobuf:"varint,2,opt,name=y" json:"y,omitempty"`
	Width         int64  `protobuf:"varint,3,opt,name=width" json:"width,omitempty"`
	Height        int64  `protobuf:"varint,4,opt,name=height" json:"height,omitempty"`
	PixAboveColon int64  `protobuf:"varint,5,opt,name=pix_above_colon,json=pixAboveColon" json:"pix_above_colon,omitempty"`
	PixMin_1      int64  `protobuf:"varint,6,opt,name=pix_min_1,json=pixMin1" json:"pix_min_1,omitempty"`
	PixMin_2      int64  `protobuf:"varint,7,opt,name=pix_min_2,json=pixMin2" json:"pix_min_2,omitempty"`
	PixSec_1      int64  `protobuf:"varint,8,opt,name=pix_sec_1,json=pixSec1" json:"pix_sec_1,omitempty"`
	PixSec_2      int64  `protobuf:"varint,9,opt,name=pix_sec_2,json=pixSec2" json:"pix_sec_2,omitempty"`
	SlotWidth     int64  `protobuf:"varint,10,opt,name=slot_width,json=slotWidth" json:"slot_width,omitempty"`
	SlotHeight    int64  `protobuf:"varint,11,opt,name=slot_height,json=slotHeight" json:"slot_height,omitempty"`
	Background    string `protobuf:"bytes,12,opt,name=background" json:"background,omitempty"`
	// SecondsAdjustment is the number is pixels to adjust for when the
	// colon is removed and seconds under a minute adjust to the left.
	SecondsAdjustment int64 `protobuf:"varint,13,opt,name=seconds_adjustment,json=secondsAdjustment" json:"seconds_adjustment,omitempty"`
	// DecimalAdjustment is the number is pixels to adjust for when the
	// colon is removed and the decimal is added that adjusts the
	// placement of the seconds.
	DecimalAdjustment int64 `protobuf:"varint,14,opt,name=decimal_adjustment,json=decimalAdjustment" json:"decimal_adjustment,omitempty"`
}

func (m *OCRDimensions) Reset()                    { *m = OCRDimensions{} }
func (m *OCRDimensions) String() string            { return proto.CompactTextString(m) }
func (*OCRDimensions) ProtoMessage()               {}
func (*OCRDimensions) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *OCRDimensions) GetX() int64 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *OCRDimensions) GetY() int64 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *OCRDimensions) GetWidth() int64 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *OCRDimensions) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *OCRDimensions) GetPixAboveColon() int64 {
	if m != nil {
		return m.PixAboveColon
	}
	return 0
}

func (m *OCRDimensions) GetPixMin_1() int64 {
	if m != nil {
		return m.PixMin_1
	}
	return 0
}

func (m *OCRDimensions) GetPixMin_2() int64 {
	if m != nil {
		return m.PixMin_2
	}
	return 0
}

func (m *OCRDimensions) GetPixSec_1() int64 {
	if m != nil {
		return m.PixSec_1
	}
	return 0
}

func (m *OCRDimensions) GetPixSec_2() int64 {
	if m != nil {
		return m.PixSec_2
	}
	return 0
}

func (m *OCRDimensions) GetSlotWidth() int64 {
	if m != nil {
		return m.SlotWidth
	}
	return 0
}

func (m *OCRDimensions) GetSlotHeight() int64 {
	if m != nil {
		return m.SlotHeight
	}
	return 0
}

func (m *OCRDimensions) GetBackground() string {
	if m != nil {
		return m.Background
	}
	return ""
}

func (m *OCRDimensions) GetSecondsAdjustment() int64 {
	if m != nil {
		return m.SecondsAdjustment
	}
	return 0
}

func (m *OCRDimensions) GetDecimalAdjustment() int64 {
	if m != nil {
		return m.DecimalAdjustment
	}
	return 0
}

type ValidateChances struct {
	GameMigration *GameFileMigration `protobuf:"bytes,1,opt,name=game_migration,json=gameMigration" json:"game_migration,omitempty"`
	Validations   []string           `protobuf:"bytes,2,rep,name=validations" json:"validations,omitempty"`
}

func (m *ValidateChances) Reset()                    { *m = ValidateChances{} }
func (m *ValidateChances) String() string            { return proto.CompactTextString(m) }
func (*ValidateChances) ProtoMessage()               {}
func (*ValidateChances) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *ValidateChances) GetGameMigration() *GameFileMigration {
	if m != nil {
		return m.GameMigration
	}
	return nil
}

func (m *ValidateChances) GetValidations() []string {
	if m != nil {
		return m.Validations
	}
	return nil
}

// VideoJoin describes 2 or more existing, input videos that should be joined
// into a new video file. Joins happen in the order of the inputs. If
// FailOnNoInput is false, then missing input files are just skipped, otherwise
// the task fails. If MakePublic is true, the file is made public upon upload
// to Destination.
type VideoJoin struct {
	Sources       []string `protobuf:"bytes,1,rep,name=sources" json:"sources,omitempty"`
	FailOnNoInput bool     `protobuf:"varint,2,opt,name=fail_on_no_input,json=failOnNoInput" json:"fail_on_no_input,omitempty"`
	Destination   string   `protobuf:"bytes,3,opt,name=destination" json:"destination,omitempty"`
	MakePublic    bool     `protobuf:"varint,4,opt,name=make_public,json=makePublic" json:"make_public,omitempty"`
}

func (m *VideoJoin) Reset()                    { *m = VideoJoin{} }
func (m *VideoJoin) String() string            { return proto.CompactTextString(m) }
func (*VideoJoin) ProtoMessage()               {}
func (*VideoJoin) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *VideoJoin) GetSources() []string {
	if m != nil {
		return m.Sources
	}
	return nil
}

func (m *VideoJoin) GetFailOnNoInput() bool {
	if m != nil {
		return m.FailOnNoInput
	}
	return false
}

func (m *VideoJoin) GetDestination() string {
	if m != nil {
		return m.Destination
	}
	return ""
}

func (m *VideoJoin) GetMakePublic() bool {
	if m != nil {
		return m.MakePublic
	}
	return false
}

// Split describes segments of an existing source video that should be
// made into their own video files (at Destinations). Segments and Destinations
// should therefore be the same size. Splits from two different video sources
// should be two different split messages.
type VideoSplit struct {
	Source       string          `protobuf:"bytes,1,opt,name=source" json:"source,omitempty"`
	Segments     []*VideoSegment `protobuf:"bytes,2,rep,name=segments" json:"segments,omitempty"`
	Destinations []string        `protobuf:"bytes,3,rep,name=destinations" json:"destinations,omitempty"`
}

func (m *VideoSplit) Reset()                    { *m = VideoSplit{} }
func (m *VideoSplit) String() string            { return proto.CompactTextString(m) }
func (*VideoSplit) ProtoMessage()               {}
func (*VideoSplit) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *VideoSplit) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *VideoSplit) GetSegments() []*VideoSegment {
	if m != nil {
		return m.Segments
	}
	return nil
}

func (m *VideoSplit) GetDestinations() []string {
	if m != nil {
		return m.Destinations
	}
	return nil
}

type VideoSegment struct {
	StartSeconds float32 `protobuf:"fixed32,1,opt,name=start_seconds,json=startSeconds" json:"start_seconds,omitempty"`
	EndSeconds   float32 `protobuf:"fixed32,2,opt,name=end_seconds,json=endSeconds" json:"end_seconds,omitempty"`
}

func (m *VideoSegment) Reset()                    { *m = VideoSegment{} }
func (m *VideoSegment) String() string            { return proto.CompactTextString(m) }
func (*VideoSegment) ProtoMessage()               {}
func (*VideoSegment) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *VideoSegment) GetStartSeconds() float32 {
	if m != nil {
		return m.StartSeconds
	}
	return 0
}

func (m *VideoSegment) GetEndSeconds() float32 {
	if m != nil {
		return m.EndSeconds
	}
	return 0
}

func init() {
	proto.RegisterType((*GameFileMigration)(nil), "messages.GameFileMigration")
	proto.RegisterType((*MigrateChances)(nil), "messages.MigrateChances")
	proto.RegisterType((*OCRTextExtraction)(nil), "messages.OCRTextExtraction")
	proto.RegisterType((*OCRDimensions)(nil), "messages.OCRDimensions")
	proto.RegisterType((*ValidateChances)(nil), "messages.ValidateChances")
	proto.RegisterType((*VideoJoin)(nil), "messages.VideoJoin")
	proto.RegisterType((*VideoSplit)(nil), "messages.VideoSplit")
	proto.RegisterType((*VideoSegment)(nil), "messages.VideoSegment")
}

func init() { proto.RegisterFile("nba.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 703 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x54, 0xcf, 0x6e, 0x13, 0x3f,
	0x10, 0xd6, 0x66, 0x7f, 0xcd, 0x9f, 0x49, 0xd2, 0x3f, 0xd6, 0x4f, 0xed, 0x8a, 0x0a, 0x1a, 0x2d,
	0x12, 0x70, 0x80, 0x4a, 0x09, 0x07, 0x4e, 0x1c, 0x4a, 0xa0, 0x50, 0xa4, 0xd2, 0x6a, 0x53, 0x95,
	0xa3, 0xe5, 0xec, 0xba, 0x89, 0xe9, 0xae, 0xbd, 0x5a, 0x3b, 0xed, 0x56, 0xe2, 0x25, 0xb8, 0xf2,
	0x12, 0x3c, 0x1b, 0x6f, 0x80, 0x3c, 0xde, 0x24, 0x5b, 0x21, 0xc1, 0x85, 0xe3, 0x7c, 0xdf, 0x67,
	0xcf, 0x37, 0xe3, 0xf1, 0x40, 0x47, 0x4e, 0xd9, 0x61, 0x5e, 0x28, 0xa3, 0x48, 0x3b, 0xe3, 0x5a,
	0xb3, 0x19, 0xd7, 0xe1, 0x15, 0xec, 0xbc, 0x67, 0x19, 0x3f, 0x16, 0x29, 0x3f, 0x15, 0xb3, 0x82,
	0x19, 0xa1, 0x24, 0xd9, 0x83, 0xd6, 0x8c, 0x65, 0x9c, 0x8a, 0x24, 0xf0, 0x06, 0xde, 0xb3, 0x4e,
	0xd4, 0xb4, 0xe1, 0x49, 0x42, 0x76, 0xa1, 0xa9, 0xd5, 0xa2, 0x88, 0x79, 0xd0, 0x70, 0xb8, 0x8b,
	0xc8, 0x00, 0xba, 0x09, 0xd7, 0x46, 0x48, 0x3c, 0x1f, 0xf8, 0x48, 0xd6, 0xa1, 0xf0, 0xbb, 0x07,
	0x9b, 0x2e, 0x01, 0x1f, 0xcf, 0x99, 0x8c, 0xb9, 0x26, 0x6f, 0x60, 0x13, 0xb3, 0x64, 0xcb, 0xbc,
	0x98, 0xac, 0x3b, 0xda, 0x3f, 0x5c, 0xba, 0x3b, 0xfc, 0xcd, 0x5a, 0xd4, 0xb7, 0x47, 0xd6, 0x4e,
	0x1f, 0x43, 0xdf, 0x59, 0xa0, 0x3a, 0x9e, 0xf3, 0x8c, 0x55, 0xbe, 0x7a, 0x0e, 0x9c, 0x20, 0x46,
	0x0e, 0x9c, 0xbb, 0xa5, 0xc4, 0xb9, 0x03, 0x0b, 0x39, 0x41, 0xf8, 0xd3, 0x83, 0x9d, 0xb3, 0x71,
	0x74, 0xc1, 0x4b, 0xf3, 0xae, 0x34, 0x05, 0x8b, 0xff, 0xdc, 0x85, 0x87, 0x00, 0x37, 0x22, 0xe1,
	0x8a, 0xe6, 0xcc, 0xcc, 0xab, 0x8c, 0x1d, 0x44, 0xce, 0x99, 0x99, 0x93, 0xd7, 0xb0, 0xcf, 0xdd,
	0x2d, 0x3c, 0xa1, 0x57, 0x05, 0xcb, 0xb8, 0xa6, 0x39, 0x2f, 0xa8, 0xe6, 0xb1, 0x92, 0x09, 0xa6,
	0xf7, 0xa3, 0x60, 0x25, 0x39, 0x46, 0xc5, 0x39, 0x2f, 0x26, 0xc8, 0x93, 0xe7, 0x40, 0xd4, 0xc2,
	0xe4, 0x0b, 0x43, 0x45, 0x66, 0x9b, 0xe0, 0xb2, 0xfc, 0x87, 0x59, 0xb6, 0x1d, 0x73, 0x82, 0x04,
	0x26, 0x7b, 0x05, 0x90, 0x88, 0x8c, 0x4b, 0x2d, 0x94, 0xd4, 0xc1, 0x06, 0x36, 0x70, 0x6f, 0xdd,
	0xc0, 0xb3, 0x71, 0xf4, 0x76, 0x45, 0x47, 0x35, 0x69, 0xf8, 0xc3, 0x87, 0xfe, 0x3d, 0x96, 0xf4,
	0xc0, 0x2b, 0xb1, 0x52, 0x3f, 0xf2, 0x4a, 0x1b, 0xdd, 0x61, 0x6d, 0x7e, 0xe4, 0xdd, 0x91, 0xff,
	0x61, 0xe3, 0x56, 0x24, 0x66, 0x5e, 0xb9, 0x77, 0x81, 0x1d, 0x87, 0x39, 0x17, 0xb3, 0xb9, 0x41,
	0x7b, 0x7e, 0x54, 0x45, 0xe4, 0x09, 0x6c, 0xe5, 0xa2, 0xa4, 0x6c, 0xaa, 0x6e, 0x38, 0x8d, 0x55,
	0xaa, 0x24, 0x3a, 0xf3, 0xa3, 0x7e, 0x2e, 0xca, 0x23, 0x8b, 0x8e, 0x2d, 0x48, 0x1e, 0x40, 0xc7,
	0xea, 0x32, 0x21, 0xe9, 0x30, 0x68, 0xa2, 0xa2, 0x95, 0x8b, 0xf2, 0x54, 0xc8, 0x61, 0x9d, 0x1b,
	0x05, 0xad, 0x3a, 0x37, 0x5a, 0x72, 0x9a, 0xc7, 0x74, 0x18, 0xb4, 0x57, 0xdc, 0x84, 0xc7, 0xc3,
	0x3a, 0x37, 0x0a, 0x3a, 0x75, 0x6e, 0x64, 0x1f, 0x4e, 0xa7, 0xca, 0x50, 0x57, 0x0a, 0x20, 0xd9,
	0xb1, 0xc8, 0x67, 0x2c, 0xe7, 0x00, 0xba, 0x48, 0x57, 0x35, 0x75, 0x91, 0xc7, 0x13, 0x1f, 0x5c,
	0x5d, 0x8f, 0x00, 0xa6, 0x2c, 0xbe, 0x9e, 0x15, 0x6a, 0x21, 0x93, 0xa0, 0xe7, 0xe6, 0x68, 0x8d,
	0x90, 0x17, 0x40, 0xdc, 0x23, 0x6b, 0xca, 0x92, 0x2f, 0x0b, 0x6d, 0x32, 0x2e, 0x4d, 0xd0, 0xc7,
	0x7b, 0x76, 0x2a, 0xe6, 0x68, 0x45, 0x58, 0x79, 0xc2, 0x63, 0x91, 0xb1, 0xb4, 0x2e, 0xdf, 0x74,
	0xf2, 0x8a, 0x59, 0xcb, 0xc3, 0x5b, 0xd8, 0xba, 0x64, 0xa9, 0x48, 0xfe, 0xf1, 0x17, 0x1a, 0x40,
	0xf7, 0xc6, 0x5d, 0x8b, 0x23, 0xd4, 0x18, 0xf8, 0xf6, 0xef, 0xd6, 0xa0, 0xf0, 0x9b, 0x07, 0x9d,
	0x4b, 0x3b, 0xde, 0x1f, 0x95, 0x90, 0x24, 0x80, 0x96, 0xfb, 0x5d, 0x3a, 0xf0, 0x50, 0xbb, 0x0c,
	0xc9, 0x53, 0xd8, 0xbe, 0x62, 0x22, 0xa5, 0x4a, 0x52, 0xa9, 0xa8, 0x90, 0xf9, 0xc2, 0xe0, 0x04,
	0xb5, 0xa3, 0xbe, 0xc5, 0xcf, 0xe4, 0x27, 0x75, 0x62, 0xc1, 0xbf, 0xaf, 0x0b, 0xfb, 0x14, 0x19,
	0xbb, 0xe6, 0x34, 0x5f, 0x4c, 0x53, 0x11, 0xe3, 0x78, 0xb5, 0x23, 0xb0, 0xd0, 0x39, 0x22, 0xe1,
	0x57, 0x00, 0xb4, 0x34, 0xc9, 0x53, 0x61, 0x6a, 0x7b, 0xc9, 0xbb, 0xb7, 0x97, 0x46, 0xd0, 0xd6,
	0x7c, 0x66, 0xbb, 0xe7, 0x0a, 0xeb, 0x8e, 0x76, 0xd7, 0x9d, 0x71, 0xe7, 0x1d, 0x1d, 0xad, 0x74,
	0x24, 0x84, 0x5e, 0xcd, 0x89, 0x0e, 0x7c, 0x2c, 0xf2, 0x1e, 0x16, 0x5e, 0x40, 0xaf, 0x7e, 0x1a,
	0xd7, 0x90, 0x61, 0x85, 0xa9, 0xfe, 0xb8, 0x46, 0x1b, 0x8d, 0xa8, 0x87, 0xa0, 0xfb, 0xd7, 0xda,
	0xd6, 0xc4, 0x65, 0xb2, 0x92, 0x34, 0x50, 0x02, 0x5c, 0x26, 0x95, 0x60, 0xda, 0xc4, 0xe5, 0xfc,
	0xf2, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0x77, 0x69, 0x6c, 0x79, 0xa9, 0x05, 0x00, 0x00,
}
